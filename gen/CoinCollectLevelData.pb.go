// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: CoinCollectLevelData.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Name: JNDPIICGKPI
type CoinCollectLevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NKDIAHFFCIG            uint32                     `protobuf:"varint,14,opt,name=NKDIAHFFCIG,proto3" json:"NKDIAHFFCIG,omitempty"`
	NJHLNPIHHNO            uint32                     `protobuf:"varint,9,opt,name=NJHLNPIHHNO,proto3" json:"NJHLNPIHHNO,omitempty"`
	DoubleBestTeamInfoList []*CoinCollectTeamInfoData `protobuf:"bytes,12,rep,name=double_best_team_info_list,json=doubleBestTeamInfoList,proto3" json:"double_best_team_info_list,omitempty"`
	FNKMLBJPMOK            uint32                     `protobuf:"varint,5,opt,name=FNKMLBJPMOK,proto3" json:"FNKMLBJPMOK,omitempty"`
	HFHAHHODINP            bool                       `protobuf:"varint,3,opt,name=HFHAHHODINP,proto3" json:"HFHAHHODINP,omitempty"`
	SingleBestTeamInfo     *CoinCollectTeamInfoData   `protobuf:"bytes,4,opt,name=single_best_team_info,json=singleBestTeamInfo,proto3" json:"single_best_team_info,omitempty"`
	HLDOLEELKOK            bool                       `protobuf:"varint,7,opt,name=HLDOLEELKOK,proto3" json:"HLDOLEELKOK,omitempty"`
	IsLevelOpen            bool                       `protobuf:"varint,15,opt,name=is_level_open,json=isLevelOpen,proto3" json:"is_level_open,omitempty"`
	OMIILLBKHFH            uint32                     `protobuf:"varint,11,opt,name=OMIILLBKHFH,proto3" json:"OMIILLBKHFH,omitempty"`
	LevelId                uint32                     `protobuf:"varint,10,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	MIBBPBCIIIJ            uint32                     `protobuf:"varint,8,opt,name=MIBBPBCIIIJ,proto3" json:"MIBBPBCIIIJ,omitempty"`
	CBBHLOABNLE            bool                       `protobuf:"varint,6,opt,name=CBBHLOABNLE,proto3" json:"CBBHLOABNLE,omitempty"`
}

func (x *CoinCollectLevelData) Reset() {
	*x = CoinCollectLevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CoinCollectLevelData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinCollectLevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinCollectLevelData) ProtoMessage() {}

func (x *CoinCollectLevelData) ProtoReflect() protoreflect.Message {
	mi := &file_CoinCollectLevelData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinCollectLevelData.ProtoReflect.Descriptor instead.
func (*CoinCollectLevelData) Descriptor() ([]byte, []int) {
	return file_CoinCollectLevelData_proto_rawDescGZIP(), []int{0}
}

func (x *CoinCollectLevelData) GetNKDIAHFFCIG() uint32 {
	if x != nil {
		return x.NKDIAHFFCIG
	}
	return 0
}

func (x *CoinCollectLevelData) GetNJHLNPIHHNO() uint32 {
	if x != nil {
		return x.NJHLNPIHHNO
	}
	return 0
}

func (x *CoinCollectLevelData) GetDoubleBestTeamInfoList() []*CoinCollectTeamInfoData {
	if x != nil {
		return x.DoubleBestTeamInfoList
	}
	return nil
}

func (x *CoinCollectLevelData) GetFNKMLBJPMOK() uint32 {
	if x != nil {
		return x.FNKMLBJPMOK
	}
	return 0
}

func (x *CoinCollectLevelData) GetHFHAHHODINP() bool {
	if x != nil {
		return x.HFHAHHODINP
	}
	return false
}

func (x *CoinCollectLevelData) GetSingleBestTeamInfo() *CoinCollectTeamInfoData {
	if x != nil {
		return x.SingleBestTeamInfo
	}
	return nil
}

func (x *CoinCollectLevelData) GetHLDOLEELKOK() bool {
	if x != nil {
		return x.HLDOLEELKOK
	}
	return false
}

func (x *CoinCollectLevelData) GetIsLevelOpen() bool {
	if x != nil {
		return x.IsLevelOpen
	}
	return false
}

func (x *CoinCollectLevelData) GetOMIILLBKHFH() uint32 {
	if x != nil {
		return x.OMIILLBKHFH
	}
	return 0
}

func (x *CoinCollectLevelData) GetLevelId() uint32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *CoinCollectLevelData) GetMIBBPBCIIIJ() uint32 {
	if x != nil {
		return x.MIBBPBCIIIJ
	}
	return 0
}

func (x *CoinCollectLevelData) GetCBBHLOABNLE() bool {
	if x != nil {
		return x.CBBHLOABNLE
	}
	return false
}

var File_CoinCollectLevelData_proto protoreflect.FileDescriptor

var file_CoinCollectLevelData_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x43, 0x6f,
	0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x04, 0x0a, 0x14,
	0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x4b, 0x44, 0x49, 0x41, 0x48, 0x46, 0x46,
	0x43, 0x49, 0x47, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x4b, 0x44, 0x49, 0x41,
	0x48, 0x46, 0x46, 0x43, 0x49, 0x47, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x4a, 0x48, 0x4c, 0x4e, 0x50,
	0x49, 0x48, 0x48, 0x4e, 0x4f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x4a, 0x48,
	0x4c, 0x4e, 0x50, 0x49, 0x48, 0x48, 0x4e, 0x4f, 0x12, 0x54, 0x0a, 0x1a, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x5f, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x16, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x42, 0x65,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x46, 0x4e, 0x4b, 0x4d, 0x4c, 0x42, 0x4a, 0x50, 0x4d, 0x4f, 0x4b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x46, 0x4e, 0x4b, 0x4d, 0x4c, 0x42, 0x4a, 0x50, 0x4d, 0x4f, 0x4b,
	0x12, 0x20, 0x0a, 0x0b, 0x48, 0x46, 0x48, 0x41, 0x48, 0x48, 0x4f, 0x44, 0x49, 0x4e, 0x50, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x46, 0x48, 0x41, 0x48, 0x48, 0x4f, 0x44, 0x49,
	0x4e, 0x50, 0x12, 0x4b, 0x0a, 0x15, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x62, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x42, 0x65, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x48, 0x4c, 0x44, 0x4f, 0x4c, 0x45, 0x45, 0x4c, 0x4b, 0x4f, 0x4b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x4c, 0x44, 0x4f, 0x4c, 0x45, 0x45, 0x4c, 0x4b, 0x4f,
	0x4b, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x4d, 0x49, 0x49, 0x4c, 0x4c, 0x42,
	0x4b, 0x48, 0x46, 0x48, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4f, 0x4d, 0x49, 0x49,
	0x4c, 0x4c, 0x42, 0x4b, 0x48, 0x46, 0x48, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x49, 0x42, 0x42, 0x50, 0x42, 0x43, 0x49, 0x49, 0x49,
	0x4a, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4d, 0x49, 0x42, 0x42, 0x50, 0x42, 0x43,
	0x49, 0x49, 0x49, 0x4a, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x42, 0x42, 0x48, 0x4c, 0x4f, 0x41, 0x42,
	0x4e, 0x4c, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x43, 0x42, 0x42, 0x48, 0x4c,
	0x4f, 0x41, 0x42, 0x4e, 0x4c, 0x45, 0x42, 0x06, 0x5a, 0x04, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CoinCollectLevelData_proto_rawDescOnce sync.Once
	file_CoinCollectLevelData_proto_rawDescData = file_CoinCollectLevelData_proto_rawDesc
)

func file_CoinCollectLevelData_proto_rawDescGZIP() []byte {
	file_CoinCollectLevelData_proto_rawDescOnce.Do(func() {
		file_CoinCollectLevelData_proto_rawDescData = protoimpl.X.CompressGZIP(file_CoinCollectLevelData_proto_rawDescData)
	})
	return file_CoinCollectLevelData_proto_rawDescData
}

var file_CoinCollectLevelData_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_CoinCollectLevelData_proto_goTypes = []interface{}{
	(*CoinCollectLevelData)(nil),    // 0: CoinCollectLevelData
	(*CoinCollectTeamInfoData)(nil), // 1: CoinCollectTeamInfoData
}
var file_CoinCollectLevelData_proto_depIdxs = []int32{
	1, // 0: CoinCollectLevelData.double_best_team_info_list:type_name -> CoinCollectTeamInfoData
	1, // 1: CoinCollectLevelData.single_best_team_info:type_name -> CoinCollectTeamInfoData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_CoinCollectLevelData_proto_init() }
func file_CoinCollectLevelData_proto_init() {
	if File_CoinCollectLevelData_proto != nil {
		return
	}
	file_CoinCollectTeamInfoData_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_CoinCollectLevelData_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinCollectLevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CoinCollectLevelData_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CoinCollectLevelData_proto_goTypes,
		DependencyIndexes: file_CoinCollectLevelData_proto_depIdxs,
		MessageInfos:      file_CoinCollectLevelData_proto_msgTypes,
	}.Build()
	File_CoinCollectLevelData_proto = out.File
	file_CoinCollectLevelData_proto_rawDesc = nil
	file_CoinCollectLevelData_proto_goTypes = nil
	file_CoinCollectLevelData_proto_depIdxs = nil
}
